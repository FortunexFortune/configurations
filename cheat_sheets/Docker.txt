======================================== Help ==============================

docker --help                             #returns list of managment_commands and commands
docker managment_command --help           #returns list of commands available to the specified managment_command 
docker managment_command command -help--  #returns flags available to the command

=============================== Images  =================================

docker image --help                               #returns image commands
docker image command --help                       #returns flags available to the command
docker image ls                                   #retruns all images
docker images                                     #retruns all images
docker pull imageName                             #pulls the docker image from dockerhub
docker image inspect imageID                      #return json doc of image details
docker image inspect name                         #return json doc of image details

=============================== Dockefile  =================================

docker build -t fortunexfortune/moviesearchapi .  #build image

============================== Containers ======================================

docker container --help                         #returns container commands
docker container command --help                 #returns flags available to the command
docker container ls                             # returns list of running containers
docker container ps                             # returns list of running containers
docker container ls -a                          # returns a lsit of all containers
docker container inspect containerID            #return json doc of container details
docker container inspect containerName          #return json doc of container details
docker container top containerID                #returns running processes of a container
docker container start containerID              #Start container
docker container stop containerID               #Stop container
docker container pause containerID              #pauses all running process
docker container unpause containerID            #resumes all running process
docker container logs containerID               #returns container logs, useful for torubleshoting containers
docker container stats containerID              #returns cpu and memory usage of the cotnainer
docker container rm containerID                 #removes stoped containers
docker container rm -f containerID              #removes running container
docker container prune -f                       #removes all stopped containers

============================== Containers run ======================================

docker container run imageName                  #runs a container
docker container run --name [Name] imageName    # runs a container with specified name
docker container run -P imageName               # -P = publishes all container exposed ports to random ports
docker container run -p 8080:80 imageName       # -p =  publishes a container's port(s) to the host port
docker container run -d imageName               # -d = runs the container in the background
docker container run --rm imageName             #Automatically remove container when it exits
docker container run -it imageName              # -i = Keep STDIN open even if not attached

============================== Containers exec ======================================

docker container exec -it containerID /bin/bash         #Takes you to the contaienr prompt [ /bin/bash ]
dokcer container exec -it containerID ls /desired/path  #returns output to host standard output


============================  Networks ================================================
ifconfig                                   #returns all adaptors
docker network --help                      #returns networking commands
docker network ls                          #return all networks
docker network ls --no-trunc               #Do not truncate the output
docker network inspect [NAME]              #gives details on selected network
docker network create [NAME]               #create a docker network
docker network rm [NAME]                   #deletes selected network
docker network prune -f                    #removes all inactive networks

docker network connect [NetworkName] [ContainerName]  #Attach container to selected network
docker network disconnect br01 network-test03         # Removes a container from a network


docker network create --subnet 10.1.0.0/24 --gateway 10.1.0.1 br02





docker run --name moviesearchapi -p 3000:3000 -d fortunexfortune/moviesearchapi:latest
