============= Git configuration  ====================

git config -l 
git config --list
git config --list --show-origin

git config --global user.name <username>      # sets global git credentials
git config --global user.email <email_addr>   # sets global git credentials

git config --system core.editor vim          
git config --global core.editor emac

git config user.name "Your Name Here"         # sets local git credentials
git config user.email your@email.com          # sets local git credentials


# Alternatively, you may store system-wide configuration values in the file directly:
#– /etc/gitconfig which corresponds to --system
#– ~/.gitconfig or ~/.config/git/config which corresponds to --global
#– .git/config in a repository which corresponds to --local
#– Note: Files lower in the list override files higher in the list.


============= Repository Basics ===============

git init                     # initalize a git repository
git status                   # returns the status of the repo
git add <filename>           # adds a specific file to staging
git add .                    # adds all files to staging
git commit -m "text "        # commits the changes
git commit -a -m "text"      # stage and commit cahnges
git rm <file>                # used to stop tracking a provided file.
git checkout -- d_file       # brings back previosly commited file that was deleted

git log
git log --oneline             # return abbreviated log info
git log -p                    # returns detailed info 
git log -1 --pretty=%H        # returns the last commit hash 
git log -- <filename>         # returns information on a particular file
git log --oneline <filename>  # returns information on a particular file



============== Cloning and Pushing =========================

git clone repouURL         # clone repo from https 
git clone repoURl path     

#clones a local repo to a specific path
git clone <path_of_original> <clone_repo_destination>  

#cloning over ssh
git clone user@server:<original_repo_path_relative_to_user_home> <local_repo_path>    


git push origin master    # pushing changes to origin repository
git push origin --all     # pushes all barnaches ot the origin


================== Branches =====================

git branch <new branch>       # Create a branch
git branch -a                 # returns list of all branches
git branch -D <branch>        # deltes the branch 
git checkout <branch>         # switches you to the new branch
git checkout -b <new branch>  # creates and checks you out the new branch
git merge <branch>            # merges the selected branch to your current branch
git push origin --delete <new branch> # delete remote branch



=============== Merging branches ===========================
git checkout -b  feature/login
git checkout develop
git merge feature/login
git branch -d new-feature  # delete branch
git push origin --delete new-feature  # delete remote branch


=============== unsorted ===========================

git remote add origin https://github.com/user/repo.git   # Set a new remote
git remote -v   # Verify new remote
git pull  origin master
git push origin master 


===========================================
# Deleting local branches
===========================================
git branch -a
git branch -d test

===========================================
# Deleting remote branches
===========================================

git branch -a
git push origin --delete test
