#######################################
## System
######################################

kubectl create -f <file.yaml>               # create k8 object

kubectl get componentstatus                 # returns compoenets status

kubectl cluster-info                        # returns info on where the master and DNS is running
kubectl config view                         # returns brief configuration of your cluster
kubectl api-resources -o wide               # get all resource avaible on your cluster
kubectl get pods -n kube-system             # retruns system pods (used by kubernetes in the backgound to run the cluster)

kubectl describe nodes                      # get Information about nodes
kubectl describe pods                       # get Information about pods

kubectl get endpoints
kubectl get endpoints kube-scheduler -n kube-system  -o yaml
kubectl get endpoints kube-controller-manager  -n kube-system  -o yaml

#######################################
## Container and pods
######################################

kubectl get pods                            # returns running pods
kubectl get pods -o wide                    # returns ip address of your pods
kubectl get pods -n <name>                  # get pods belonging to a namespace
kubectl get pods --all-namespeces           # get pods across all namespaces
kubectl get pods --all-namespeces -o wide   # get pods across all namespaces with more details

kubectl describe pods
kubectl describe pod nginx
kubectl delete pod nginx
kubectl describe pods  --all-namespaces     # get Information about pods across all name spaces

kubectl get pods  --show-labels             # returns pods and their labels

kubectl get pods/<podname> -o yaml          # return yaml of a pod state

#######################################
## Clustering and Nodes
######################################

kubectl get nodes                   # Get a list of nodes
kubectl describe nodes               # get Information about nodes
kubectl describe node $node_name    # Get more information about a specific node

#######################################
## Deployments
######################################

kubectl get deployments                         # returns your deployments
kubectl get deployment <name> -o yaml           # returns the complete yaml of the deployment (COMPLETE)

kubectl describe deployment nginx-deployment    # return more info related to the deployment
kubectl delete deployment nginx                 # delete deployments

#######################################
## Services
######################################
# You can use "svc" or "service"

kubectl get svc                              #returns  list of services in the cluster.
kubectl get service                          #returns  list of services in the cluster.
kubectl  get services  --all-namespaces      # get informtiaon about services across all name spaces

kubectl  describe services  --all-namespaces
kubectl delete svc nginx-service  #deletes service

#######################################
## namespaces
######################################

kubectl get namespaces        # return namespace
kubectl get pods -n my-ns     # get pods belonging to a namespace
kubectl create ns my-ns       # Create a new namespace named my-ns

#######################################
## Labels
######################################
# applied at the pod level

kubectl get pods  --show-labels             # returns pods with their label
kubectl get pods -L env                     # returns pods with specific label

kubectl label pods <name> key=value         # apply a new label to a set of labels 
kubectl label pods <pod name> env=pod       # apply label to a pod

#######################################
## Annotations
######################################
# applied at the obejct  level 

kubectl annotate deployment  <deployment_Name> mycompany.com/someannotation="chad"
kubectl get pods --field-selector status.phase=Running

#######################################
## ServiceAccount
######################################
 
# Every namespace has a default service account resource called default. You can list this and any other serviceAccount resources in the  # namespace with this command :

kubectl get serviceaccounts


# Creating additional serviceacoount
kubectl apply -f - <<EOF
apiVersion: v1
kind: ServiceAccount
metadata:
  name: build-robot
EOF

kubectl get serviceaccounts/build-robot -o yaml   # get servie account yaml

============== Kubernetes MicroServices ==============
cd ~/
git clone https://github.com/linuxacademy/robot-shop.git
kubectl create namespace robot-shop                             # Create a namespace
kubectl -n robot-shop create -f ~/robot-shop/K8s/descriptors/   # deploy app objects using the deployment descriptors from the repo
kubectl get pods -n robot-shop -w                               # -w gives the ability to watch ral time creation of the pods
http://$kube_server_public_ip:30080                             # access the application via the kubernetes master ip

https://github.com/linuxacademy/robot-shop/tree/master/K8s/descriptors

##########################
## Extra
##########################

kubectl get secrets # kubectl get secrets
