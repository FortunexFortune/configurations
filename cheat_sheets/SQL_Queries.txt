===  Creating a table  ====
CREATE TABLE cities (
cityid varchar(5),
cityname varchar(80),
state varchar(20));

CREATE TABLE cities (
name VARCHAR(50), 
country VARCHAR(50),
population INTEGER,
area INTEGER
);



============ insert into a table ============
INSERT INTO cities VALUES ('test','modena', 'Emiglia_Romagnia');

INSERT INTO cities (name, country, population, area)
VALUES ('Tokyo', 'Japan', 38505000, 8223);

# Insert multiple rows in a single statement 
INSERT INTO cities (name, country, population, area)
VALUES 
	('Delhi', 'India', 28125000, 2240),
	('Shanghai', 'China', 22125000, 4015),
	('Sao Paulo', 'Brazil', 20935000, 3043);
	

============  Select from table  ============
SELECT * FROM cities;

SELECT name,country FROM cities;


-- numeric oprators

SELECT name,country, population/area AS density FROM cities;	
SELECT name,country, population*area AS density FROM cities;
SELECT name,country, population-area AS density FROM cities;


-- string operators
SELECT country|| ',' || population AS text FROM cities;	
SELECT country||population AS text FROM cities;			-- pipe operator, used to concat rows

SELECT CONCAT(name, country)  AS text FROM cities;	
UPPER()
LOWER()
LENGHT()


-- where comparisions 

SELECT * FROM cities WHERE area > 400;	

SELECT * FROM cities WHERE area BETWEEN 2000 AND 4000;	
SELECT * FROM cities WHERE name in ('Shanghai','Sao Paulo');	
SELECT * FROM cities WHERE area NOT IN (3042, 8223);	


SELECT name, population/area AS density FROM cities WHERE population/area > 6000;


-- update query

UPDATE cities SET population=9998 WHERE name='Delhi'


-- delete 
DELETE FROM cities WHERE name='Delhi'


#############################
## Select  queries
############################
SELECT version(); 				# returns postgres version



SELECT id, name, address, gender  FROM services WHERE customer_id='user';



SELECT column_names FROM table_name WHERE column_name IS NULL;


# Substring
SELECT first_name,last_name FROM customer WHERE first_name LIKE 'Jen%';



# Convert list of rows to string
select string_agg(name1, ',') as Name1s from t1#

================================
= 3 way joins
===============================

SELECT title,name, rating FROM reviews JOIN books ON reviews.book_id = books.id 
JOIN authors ON authors.id = reviews.reviewer_id AND authors.id=books.author_id


#############################
## Insert  queries
############################

INSERT INTO person (id,username) VALUES ('1','fortune');
	
#############################
## Update queries
############################
UPDATE table
SET column1 = value1,
    column2 = value2 ,...
WHERE
   condition;
   
   
#############################
## Altering queries
############################
   
ALTER TABLE accounts ADD COLUMN is_active boolean DEFAULT false NOT NULL;		# adds new column to a an existing table 

	
#############################
## Delete queries
############################

DELETE FROM acquisitions WHERE cat_id='xx';


#############################
## Joins   queries
############################

SELECT * FROM data_sources JOIN acquisitions ON data_sources.source_id = acquisitions.source_id WHERE acquisitions.cat_id='xx';

SELECT * FROM services JOIN product_types ON product_types.product_id = services.product_type_id JOIN fields ON services.field_id = fields.field_id JOIN data_sources on services.source_id = data_sources.source_id WHERE product_types.product_name = 'standard' AND services.start_date='2010-01-01' AND services.end_date='2050-12-31' AND data_sources.source ='rapideye' AND fields.field_boundary = 'xx';




