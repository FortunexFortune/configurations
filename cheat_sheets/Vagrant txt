Vagrant is a virtual machine manager. It allows you to script the virtual machine 
configuration as well as the provisioning (scripts, Chef, Puppet, Ansible ).

======== General  ========

Vagrant --version         # Returns vegrant version
vagrant <command> -h      # Returns help on the selected command

======== Vagrantfile  ========
Vagrant init              # initialize a vagrant environment by creating a vagrantfile
Vagrant init -m           # initialize a vagrant environment by creating a vagrantfile with the minimum requiremnts

======== Mangaging the box  ========
# Remember taht a <hostname> can be specifiedas part of the following commands

Vagrant up                       # Creates and configure machine according to your Vagrantfile
vagrant halt                     # shuts down 1 or more machines
vagrant suspend                  # saves our virtual environment at the current point-in-time, then stops the machine
vagrant resume                   # resume supsended vm 

Vagrant destroy                  # used to destroy the environment 
Vagrant destroy -f               # used to destroy the environment 
Vagrant validate                 # validates vagrant file
Vagrant reload                   # Reboots the system, use it after alteraing the Vagrant file
vagrant reload <id> --provision  # Reboots the system and also run provisioner
Vagrant status                   # returns the state of the machine present in the current workplace
vagrant global-status            # returns the state of the machine present in the system
vagrant status <hostname>        # returns state of the specified vm
vagrant global-status --prune    # clear status log
Vagrant provision                # runs any configured provisioners
vagrant box add ubuntu/bionic64  # add box localy

======== ssh  ========
Vagrant ssh               # SSH into a vagrant box, used for single guest in an enverioment 
vagrant ssh <hostname>    # With the hostname being the name of the virtual machine as provided in the Vagrantfile. Generally, this is used when we have a multi-machine setup
vagrant ssh -c "ls /"     # Returns ssh comand to hostm machine
vagrant ssh -c "Command"  # Returns ssh comand to hostm machine
vagrant ssh-config        # Returns info on ssh setup
ssh -p 2222 vagrant@127.0.0.1


=============================================================
Providers
=============================================================
https://www.vagrantup.com/docs/providers/

# Before you can use another provider, you must install it. 
# Installation of other providers is done via the Vagrant plugin system

#A provider is responsible for the lifecycle of a resource: 
#create, read, update, delete. An example of a provider is AWS,
#which can manage resources of type aws_instance, aws_eip, aws_elb, etc.


 https://app.vagrantup.com/boxes/search
