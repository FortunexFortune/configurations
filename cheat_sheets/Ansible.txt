================================================================================
sudo visudo 
ansible ALL=(ALL)  NOPASSWD: ALL 

or

%supergroup  ALL=(ALL) NOPASSWD:ALL
================================================================================

#Ping Module
# returns connectivity

ansible localhost -m ping
ansible -i inv remote -m ping

# Command Module
ansible localhost -a "touch hello"                  # creates file  hello
ansible localhost -a "touch hello creates=hello"    # verify that hello does not exist, then creats it
ansible localhost -a "rm -f hello"                  # removes file hello
ansible localhost -a "rm -f hello removes=hello"    # verify that hello exist then removes it

# Shell Module
ansible localhost -m shell -a "echo $PATH > hello"


# Setup module
# returns system info

ansible -i inv remote -m setup                        #  returns systems infos
ansible -i inv remote -m setup | less                 # return systems info
ansible -i inv remote -m setup -a "filter=*dist*"     # filter out output
ansible -i inv remote -m setup -a "filter=*ipv4*"     # filter out output
ansible -i inv remote -m setup --tree facts           # write systems info to the facts folder

===================================================================
File Manipulation Modules
===================================================================
# File module
# Used to create delete and modify a file

ansible-doc file  # returns man on file moduule 
ansible -i inv remote -m file -a "name=test.file state=touch"  # creates file
ansible -i inv remote -m file -a "name=test.file state=absent" # deletes a file 
ansible -i inv remote -b -m file -a "name=test.file state=touch"  # creates file with root permission 
ansible -i inv remote -b -m file -a "name=test.file state=absent" # deletes a file with root permission


# Copy module
ansible-doc -s copy   # Returns man on copy module
ansible -i inv remote -m copy -a "src=file dest=/path"         # Copies file from the maaster to nodes

# lineinfile Module
# used to insert (write) into files
ansible -i inv remote -m lineinfile -a "path=file line='text' state=present"         # appends text to a file
ansible -i inv remote -m lineinfile -a "path=file line='text' insertbefore='text' "  # appends text before target text
ansible -i inv remote -m lineinfile -a "path=file line='text' create=yes"            # creates a file before appending
ansible -i inv remote -m lineinfile -a "regexp=OLD_TEXT line=NEW_TXT path=file"      # replaces target text with new text

# get_url module
# used to download files
ansible-doc get_url  help   # returns manual on the module
ansible -i inv remote -m get_url -a "url=www.url.com dest =/home/ansible/url"         # Downloads file to absolute path


# Archive module
# used to create archive of files
ansible -i inv remote -m archive -a "path=dir format=tar dest=files.zip"                # archive files present in a dir
ansible -i inv remote -m unarchive -a "src=file dest=dir"                               # unarchive from master to nodes
ansible -i inv remote -m unarchive -a "src=file dest=dir remote_src=yes"                # unarchive archive present in the node


===================================================================
Configuring System Users and Groups
===================================================================
# User module
ansible-doc user
ansible -i inv remote -b -m user -a "name=super"                            # creates user
ansible -i inv remote -b -m user -a "name=super state=absent"               # deletes user but not user's home dir
ansible -i inv remote -b -m user -a "name=super state=absent remove=yes "   # delete user and user home dir 


# Group module
ansible-doc group
ansible -i inv remote -b -m group -a "name=newGroup"  #Creates a group

===================================================================
Installing Software and Daemon Managment
===================================================================
# Package module
ansible remote -i inv -b -m package -a "name=package state =latest"     #installs packaage on  targets

#Yum module
#Used when installing distro specific package 
ansible remote -i inv -b -m package -a "name=tree state =latest"        #installs packaage on  targets

#Apt module
#Used when installing distro specific package 
ansible remote -i inv -b -m package -a "name=tree state =latest"        #installs packaage on  targets

===================================================================
Controlling Daemons with the Service Module
===================================================================
# Service module
ansible -i inv remote -b -m service -a "name=nginx state=started enabled=yes"

===================================================================
Other Modules
===================================================================
# ansible-doc -l
# https://docs.ansible.com/ansible/latest/modules/modules_by_category.html
# https://docs.ansible.com/ansible/latest/modules/list_of_all_modules.html
# Replace module
# script module
# template module









===================================================================
# Ansible-playbook
===================================================================
ansible-playbook  -h
ansible-playbook --help


ansible-galaxy init <reoleName>       # create ansible role directore structure
ansible-galaxy list                   # lists roles

ansible-galaxy install <roleName>             # pulls role from ansible galaxy into default role path
ansible-galaxy install <roleName>  -p .roles  # pullls role from ansible galaxy to specified path

ansible-config dump | grep ROLE               # view where role default path is





===================================================================
# Molecule
===================================================================

pip install molecule docker                                                   # install molecule and docker libray for python

molecule init role                                                            # create a new role
molecule init role --driver-name docker  ansible-role-redis        # create ansible role with docker driver 
                                                                   # Setup new ansible role with molecule



molecule test     # run test for the role

molecule init scenario --driver-name docker  # Setup the existing ansible role with molecule - 
                                             # Goto inside ansible role and run below command
                                             
                                             


molecule test         # Runs full testing life cycle for testing (create - converge - verify - destroy)
molecule converge     #'provision instances with provisioing playbook
molecule destroy      # destroy intances
molecule verify       # run assert playbook aginst provisioned instances 
molecule list         # list machines provisioned for testing
molecule login       #  allows to login to instance 


scenario:
  create_sequence:
    - dependency
    - create
    - prepare
  check_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  destroy_sequence:
    - dependency
    - cleanup
    - destroy
  test_sequence:
    - dependency
    - lint
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy

