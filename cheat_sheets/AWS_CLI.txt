# Initial configuration
# http://skillslane.com/aws-tutorial-vpc-launch-instance-cli/
# https://github.com/rajivkanaujia/alphaworks/wiki/Installing-AWS-CLI-via-pip3-and-python3

=================================================================
Configuration
=================================================================

pip3 install --user --upgrade awscli
aws configure 

# Create another AWS CLI user profile that uses another keys
aws configure --profile user
aws configure --profile  user2

# Switching between user
aws ec2 describe-instances
aws ec2 describe-instances --profile user2

# Set default aws profile
export AWS_DEFAULT_PROFILE=<USER>

# List of configured profiles
cat  ~/.aws/credentials | grep "\["

# return caller identity
aws sts get-caller-identity

=================================================================
IAM
=================================================================

=================================================================
Availability zones
=================================================================
aws ec2 describe-availability-zones

=================================================================
Attach
=================================================================
# Attach to VPC
aws ec2 attach-internet-gateway --internet-gateway-id <value> --vpc-id <value>
aws ec2 associate-route-table --route-table-id <value> --subnet-id <value>
aws ec2 create-route --route-table-id <value> --destination-cidr-block 0.0.0.0/0 --gateway-id <value>

=================================================================
Delete
=================================================================

aws ec2 delete-internet-gateway --internet-gateway-id <value>
aws ec2 delete-vpc --vpc-id <value>
aws ec2 delete-route-table --route-table-id <value>

=================================================================
Vpc
=================================================================

aws ec2 create-vpc --cidr-block 10.0.0.0/16
aws ec2 create-vpc --generate-cli-skeleton > vpc.json
aws ec2 create-vpc --cli-input-json file:///home/vagrant/workspace/vpc.json
aws ec2 describe-vpcs  # Returns vpcs instances

=================================================================
Igw
=================================================================

aws ec2 create-internet-gateway
aws ec2 describe-internet-gateways        # Returns igws instances

=================================================================
Subnet
=================================================================

aws ec2 create-subnet --vpc-id vpc-99e344fd --cidr-block 10.0.1.0/24
aws ec2 create-subnet --vpc-id vpc-99e344fd --cidr-block 10.0.2.0/24
aws ec2 describe-subnets                  # Returns Subnet instances

=================================================================
Route table
=================================================================
aws ec2 create-route-table --vpc-id <value>
aws ec2 describe-route-tables             # Returns Route tables instances

=================================================================
Security Groups
=================================================================
aws ec2 create-security-group --group-name MySecurityGroup --description "..." --vpc-id <value>
aws ec2 describe-security-groups

=================================================================
instaces
=================================================================
aws ec2 run-instances --generate-cli-skeleton
aws ec2 describe-instaces  # Retuns ec2 instaces

=================================================================
S3
=================================================================
aws s3 ls 
aws s3 ls s3://<buvketName>/
aws s3 ls s3://<buvketName>/<prefix>
aws s3 cp s3://pathS3 ./ --recursive     # Copies content within a bucket into destination folder
#aws s3 cp s3://fmap-sat/etc . --recursive --exclude "*" --include "*5e4d01*" # Download only objects that match the include pattern
aws s3api list-objects --bucket bucketname --query "Contents[?LastModified>='2019-06-01T00:00:000Z'].{Key: Key , LastModified: LastModified}"

aws s3api list-objects --bucket myBucketName --query "Contents[?contains(Key, `mySearchPattern`)]"

=================================================================
Load Balancer
=================================================================
 
 aws elb create-load-balancer --load-balancer-name my-load-balancer --listeners "Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80" --subnets subnet-15aaab61 --security-groups sg-a61988c3

=================================================================
Autoscaling
=================================================================

aws autoscaling describe-auto-scaling-groups 
aws autoscaling create-auto-scaling-group
aws autoscaling  create-launch-configuration

aws autoscaling delete-auto-scaling-group

# Basic Launch Configuration setup

aws autoscaling create-launch-configuration 
 --launch-configuration-name my-launch-config 
  --image-id ami-0ad82a384c06c911e --instance-type t2.micro  
   --associate-public-ip-address 
    --security-groups 
     --user-data file://myuserdata.txt
      --key-name my-key-pair
      
      
aws autoscaling describe-launch-configurations
aws autoscaling delete-launch-configuration --launch-configuration-name <value>

=================================================================
EC2 Key Pairs
=================================================================
      
 # Generatin aws ec2 create-key-pair
 aws ec2 create-key-pair --key-name MyKeyPair --query 'KeyMaterial' --output text > MyKeyPair.pem
 aws ec2 describe-key-pairs --key-name MyKeyPair
 aws ec2 delete-key-pair --key-name MyKeyPair
